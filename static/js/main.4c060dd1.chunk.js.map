{"version":3,"sources":["features/common/components/input/Input.module.scss","features/common/components/checkbox/Checkbox.module.scss","app/App.module.scss","features/common/components/button/Button.module.scss","features/strings/Strings.module.scss","features/header/Header.module.scss","features/footer/Footer.module.scss","dal/api.ts","bll/strings-reducer.ts","features/common/components/input/Input.tsx","features/common/components/checkbox/Checkbox.tsx","features/common/components/button/Button.tsx","features/strings/Strings.tsx","features/filterSettings/FilterSettings.tsx","utils/filters/length-filter.ts","utils/filters/substring-filter.ts","features/header/Header.tsx","features/footer/Footer.tsx","assets/images/Rolling-1s-231px.svg","features/common/components/preloader/Preloader.tsx","app/App.tsx","reportWebVitals.ts","bll/store.ts","index.tsx","features/filterSettings/FilterSettings.module.scss"],"names":["module","exports","instance","axios","create","baseURL","API","get","then","response","data","fetchStringsTC","createAsyncThunk","payload","thunkAPI","a","dispatch","setAppStatusAC","status","rejectWithValue","stringsSlice","createSlice","name","initialState","reducers","state","action","extraReducers","builder","addCase","fulfilled","actions","Input","type","onChange","onChangeText","error","onKeyPress","spanClassName","className","helperText","restProps","finalSpanClassName","s","finalInputClassName","inputError","inputCorrect","e","currentTarget","value","Checkbox","onChangeChecked","children","checkbox","checked","Button","button","Strings","strings","stringsContainer","map","i","FilterSettings","useState","setValue","register","setRegister","filteredArray","setFilteredArray","setError","filterContainer","input","placeholder","onBlur","buttons","onClick","array","isNaN","length","push","lengthFilter","check","includes","toLocaleLowerCase","substringFilter","Header","headerContainer","Footer","footerContainer","Preloader","style","margin","src","preloader","alt","width","height","App","useSelector","useDispatch","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","middleware","getDefaultMiddleware","prepend","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c060dd1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputCorrect\":\"Input_inputCorrect__19fJk\",\"inputError\":\"Input_inputError__dvIfl\",\"error\":\"Input_error__2l2Uc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"Checkbox_checkbox__33Sb0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3IM3x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2wJZm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stringsContainer\":\"Strings_stringsContainer__1VknB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Header_headerContainer__hlziG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footerContainer\":\"Footer_footerContainer__1k6gx\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: `https://secret-ocean-49799.herokuapp.com/https://www.mrsoft.by/data.json`, // use it for CORS\r\n})\r\n\r\ntype ResponseType = {\r\n    data: string[]\r\n}\r\n\r\nexport const API = {\r\n    getStrings() {\r\n        return instance.get<ResponseType>(``)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}","import {createAsyncThunk, createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {API} from \"../dal/api\";\r\n\r\nexport type StatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    status: \"loading\" as StatusType,\r\n    data: [] as string[]\r\n}\r\n\r\nexport const fetchStringsTC = createAsyncThunk(\"strings/fetchStrings\", async (payload, thunkAPI) => {\r\n    thunkAPI.dispatch(setAppStatusAC({status: \"loading\"}))\r\n    try {\r\n        thunkAPI.dispatch(setAppStatusAC({status: \"succeeded\"}))\r\n        const response = await API.getStrings()\r\n        return {data: response.data}\r\n    } catch (error) {\r\n        thunkAPI.dispatch(setAppStatusAC({status: \"failed\"}))\r\n        return thunkAPI.rejectWithValue(error)\r\n    }\r\n})\r\n\r\nexport const stringsSlice = createSlice({\r\n    name: \"strings\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        setAppStatusAC: (state, action: PayloadAction<{ status: StatusType }>) => {\r\n            state.status = action.payload.status\r\n        },\r\n    },\r\n    extraReducers: builder => {\r\n        builder.addCase(fetchStringsTC.fulfilled, (state, action) => {\r\n            state.data = action.payload.data\r\n        })\r\n    }\r\n})\r\n\r\nexport const {setAppStatusAC} = stringsSlice.actions","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./Input.module.scss\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    error?: boolean | null\r\n    spanClassName?: string\r\n    supperInputClassName?: string\r\n    helperText?: string\r\n}\r\n\r\nexport const Input: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeText,\r\n        onKeyPress,\r\n        error,\r\n        className, spanClassName,\r\n        helperText,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`\r\n    const finalInputClassName = `${error ? s.inputError : s.inputCorrect}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                {...restProps}\r\n                className={finalInputClassName}\r\n            />\r\n            {error && <div className={finalSpanClassName}>{helperText}</div>}\r\n        </>\r\n    );\r\n}\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./Checkbox.module.scss\"\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nexport const Checkbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                {...restProps}\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label>\r\n    );\r\n}\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./Button.module.scss\";\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype ButtonPropsType = DefaultButtonPropsType & {}\r\n\r\nexport const Button: React.FC<ButtonPropsType> = (\r\n    {\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n\r\n    return (\r\n        <button\r\n            className={s.button}\r\n            {...restProps}\r\n        />\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport s from \"./Strings.module.scss\"\r\n\r\ntype StringsPropsType = {\r\n    strings: string []\r\n}\r\n\r\nexport const Strings: React.FC<StringsPropsType> = ({strings}) => {\r\n    return (\r\n        <div className={s.stringsContainer}>\r\n            {strings.map((s, i) => {\r\n                return <div key={i}>{s}</div>\r\n            })}\r\n        </div>\r\n    );\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport {substringFilter} from \"../../utils/filters/substring-filter\";\r\nimport {lengthFilter} from \"../../utils/filters/length-filter\";\r\nimport {Input} from \"../common/components/input/Input\";\r\nimport {Checkbox} from \"../common/components/checkbox/Checkbox\";\r\nimport {Button} from \"../common/components/button/Button\";\r\nimport {Strings} from \"../strings/Strings\";\r\nimport s from \"./FilterSettings.module.scss\";\r\n\r\ntype FilterPropsType = {\r\n    strings: string[]\r\n}\r\nexport const FilterSettings: React.FC<FilterPropsType> = ({strings}) => {\r\n\r\n    const [value, setValue] = useState<string | number>(\"\")\r\n    const [register, setRegister] = useState<boolean>(false)\r\n    const [filteredArray, setFilteredArray] = useState<string[]>([])\r\n    const [error, setError] = useState<boolean | null>(null)\r\n\r\n    const onSubstringClickHandler = () => {\r\n        if (value === \"\") {\r\n            setError(true)\r\n        }\r\n        let array = substringFilter(value, register, strings)\r\n        setFilteredArray(array)\r\n        setValue(\"\")\r\n    }\r\n    const onLengthFilterClickHandler = () => {\r\n        if (value === \"\") {\r\n            setError(true)\r\n        }\r\n        let array = lengthFilter(value, strings)\r\n        setFilteredArray(array)\r\n        setValue(\"\")\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setError(null)\r\n        setValue(e.currentTarget.value)\r\n    }\r\n\r\n    const onCheckedHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setRegister(e.currentTarget.checked)\r\n    }\r\n\r\n    return (\r\n        <div className={s.filterContainer}>\r\n            <div className={s.input}>\r\n                <Input value={value}\r\n                       onChange={onChangeHandler}\r\n                       error={error}\r\n                       placeholder=\"filter for length or substring...\"\r\n                       helperText=\"Filter is required!\"\r\n                       onBlur={() => setError(null)}\r\n                />\r\n            </div>\r\n            <div className={s.checkbox}>\r\n                <label>\r\n                    <span>Register:</span> <Checkbox checked={register} onChange={onCheckedHandler}/>\r\n                </label>\r\n            </div>\r\n            <div className={s.buttons}>\r\n                <Button onClick={onLengthFilterClickHandler}>length</Button>\r\n                <Button onClick={onSubstringClickHandler}>substring</Button>\r\n            </div>\r\n            <h2>Filtered strings:</h2>\r\n            <Strings strings={filteredArray}/>\r\n        </div>\r\n    );\r\n}","export const lengthFilter = (value: string | number, array: string[]) => {\r\n    let filteredArray = []\r\n    if (value) {\r\n        if (!isNaN(+value)) {\r\n            for (let i = 0; i < array.length; i++) {\r\n                if (array[i].length > value) {\r\n                    filteredArray.push(array[i])\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return filteredArray\r\n}","export const substringFilter = (value: string | number, check: boolean, array: string[]) => {\r\n    let filteredArray = []\r\n    if (value) {\r\n        if (check) {\r\n            if (typeof value === \"string\") {\r\n                for (let i = 0; i < array.length; i++) {\r\n                    if (array[i].includes(value)) {\r\n                        filteredArray.push(array[i])\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (typeof value === \"string\") {\r\n                for (let i = 0; i < array.length; i++) {\r\n                    if (array[i].toLocaleLowerCase().includes(value.toLocaleLowerCase())) {\r\n                        filteredArray.push(array[i])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return filteredArray\r\n}","import React from \"react\";\r\nimport s from \"./Header.module.scss\"\r\n\r\nexport const Header: React.FC=()=>{\r\n    return(\r\n        <div className={s.headerContainer}>\r\n\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport s from \"./Footer.module.scss\";\r\n\r\nexport const Footer: React.FC = ()=>{\r\n    return(\r\n      <div className={s.footerContainer}>\r\n\r\n      </div>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/Rolling-1s-231px.5238d0e6.svg\";","import React from \"react\";\r\nimport preloader from \"../../../../assets/images/Rolling-1s-231px.svg\"\r\n\r\nexport const Preloader: React.FC = () => {\r\n    return (\r\n        <div style={{margin: \"0 auto\"}}>\r\n            <h2>loading...</h2>\r\n            <img src={preloader} alt=\"loading\" style={{width: \"100px\", height: \"100px\"}}/>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from \"react\";\r\nimport s from \"./App.module.scss\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchStringsTC, StatusType} from \"../bll/strings-reducer\";\r\nimport {FilterSettings} from \"../features/filterSettings/FilterSettings\";\r\nimport {RootStateType} from \"../bll/store\";\r\nimport {Header} from \"../features/header/Header\";\r\nimport {Footer} from \"../features/footer/Footer\";\r\nimport {Preloader} from \"../features/common/components/preloader/Preloader\";\r\n\r\nexport const App: React.FC = () => {\r\n\r\n    const strings = useSelector<RootStateType, string[]>(state => state.strings.data)\r\n    const status = useSelector<RootStateType, StatusType>(state => state.strings.status)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchStringsTC())\r\n    }, [dispatch])\r\n\r\n    if (status === \"loading\") {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.App}>\r\n            <Header/>\r\n            <FilterSettings strings={strings}/>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {configureStore} from \"@reduxjs/toolkit\";\r\nimport thunk from \"redux-thunk\";\r\nimport { stringsSlice } from \"./strings-reducer\";\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        strings: stringsSlice.reducer\r\n    },\r\n    middleware: getDefaultMiddleware => getDefaultMiddleware().prepend(thunk)\r\n})\r\n\r\nexport type RootStateType = ReturnType<typeof store.getState>\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './app/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./bll/store\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"FilterSettings_filterContainer__2N-io\",\"input\":\"FilterSettings_input__2fa9y\",\"checkbox\":\"FilterSettings_checkbox__2F6eA\",\"buttons\":\"FilterSettings_buttons__aBbnM\"};"],"sourceRoot":""}